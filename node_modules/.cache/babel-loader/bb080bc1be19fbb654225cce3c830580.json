{"remainingRequest":"/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/babel-loader/lib/index.js!/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/vuetify-loader/lib/loader.js!/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mariusparaschiv/Desktop/lucru/todo/todo/src/components/todoElement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mariusparaschiv/Desktop/lucru/todo/todo/src/components/todoElement.vue","mtime":1544689838689},{"path":"/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/vuetify-loader/lib/loader.js","mtime":1543737895000},{"path":"/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mariusparaschiv/Desktop/lucru/todo/todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: [\"todo\"],\n  data: function data() {\n    return {\n      isComplete: false,\n      tempValue: null,\n      editing: false\n    };\n  },\n  methods: {\n    deleteTodo: function deleteTodo(todo) {\n      this.$emit(\"delete-todo\", todo);\n    },\n    completeTodo: function completeTodo(todo) {\n      this.$emit(\"complete-todo\", todo);\n    },\n    enableEditing: function enableEditing() {\n      this.tempValue = this.todo.title;\n      this.editing = true;\n    },\n    disableEditing: function disableEditing() {\n      this.tempValue = null;\n      this.editing = false;\n    },\n    saveEdit: function saveEdit() {\n      // However we want to save it to the database\n      this.todo.title = this.tempValue;\n      this.disableEditing();\n    }\n  }\n};",{"version":3,"sources":["todoElement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,IAAA;AACA,KAHA;AAIA,IAAA,YAJA,wBAIA,IAJA,EAIA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,IAAA;AACA,KANA;AAOA,IAAA,aAAA,EAAA,yBAAA;AACA,WAAA,SAAA,GAAA,KAAA,IAAA,CAAA,KAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,KAVA;AAWA,IAAA,cAAA,EAAA,0BAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAdA;AAeA,IAAA,QAAA,EAAA,oBAAA;AACA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,KAAA,SAAA;AACA,WAAA,cAAA;AACA;AAnBA;AATA,CAAA","sourcesContent":["<template>\n    <div class=\"todoz\">\n        <div v-if=\"!editing\">\n            <span class='text' @click=\"enableEditing\">{{todo.title}}</span>\n        </div>\n        <div v-if=\"editing\">\n          <input v-model=\"tempValue\" class=\"input\"/>\n          <button @click=\"disableEditing\"> Cancel </button>\n          <button @click=\"saveEdit\"> Save </button>\n        </div>\n        <div>{{todo.Priority}}</div>\n        <div>\n            <button v-on:click=\"completeTodo(todo)\">Complete</button>\n            <button v-on:click=\"deleteTodo(todo)\">Remove</button>\n            <div class=\"ui bottom attached green basic button\" v-show=\"!editing && todo.done\" disabled>\n        Completed\n    </div>\n    <div class=\"ui bottom attached red basic button\" v-show=\"!editing && !todo.done\" v-on:click=\"completeTodo(todo)\">\n        Pending\n    </div>\n        </div>\n        \n    </div>\n</template>\n\n<script>\nexport default {\n  props: [\"todo\"],\n  data(){\n      return {\n        isComplete:false,\n        tempValue: null,\n        editing: false\n      }\n  },\n  methods:{\n    deleteTodo(todo) {\n      this.$emit(\"delete-todo\", todo);\n    },\n    completeTodo(todo) {\n      this.$emit(\"complete-todo\", todo);\n    },\n    enableEditing: function(){\n      this.tempValue = this.todo.title;\n      this.editing = true;\n    },\n    disableEditing: function(){\n      this.tempValue = null;\n      this.editing = false;\n    },\n    saveEdit: function(){\n      // However we want to save it to the database\n      this.todo.title = this.tempValue;\n      this.disableEditing();\n    }\n  }\n}\n</script>\n\n<style scoped>\n    .todoz {\n        border:1px solid #ccc;\n        border-radius:10px;\n        margin: 20px 0;\n        padding: 20px;\n        display: flex;\n        justify-content: space-between;\n    }\n    button {\n        padding: 5px;\n        border:1px solid black;\n        margin:10px;\n        border-radius: 5px;\n    }\n</style>"],"sourceRoot":"src/components"}]}